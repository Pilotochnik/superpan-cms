# Generated by Django 5.2.6 on 2025-09-09 09:06

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kanban', '0002_expenseitem_photo_files_expenseitem_receipt_file'),
        ('projects', '0003_estimateunit_projectestimate_approved_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('color', models.CharField(default='#007bff', help_text='HEX код цвета', max_length=7, verbose_name='Цвет')),
                ('icon', models.CharField(default='bi-list-task', help_text='Bootstrap Icons класс', max_length=50, verbose_name='Иконка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
            ],
            options={
                'verbose_name': 'Категория задач',
                'verbose_name_plural': 'Категории задач',
                'db_table': 'task_categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaskPriority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('level', models.PositiveIntegerField(help_text='Чем меньше число, тем выше приоритет', unique=True, verbose_name='Уровень')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='Цвет')),
                ('icon', models.CharField(default='bi-circle', max_length=50, verbose_name='Иконка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Приоритет задач',
                'verbose_name_plural': 'Приоритеты задач',
                'db_table': 'task_priorities',
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='Цвет')),
                ('icon', models.CharField(default='bi-circle', max_length=50, verbose_name='Иконка')),
                ('is_final', models.BooleanField(default=False, help_text='Задача завершена', verbose_name='Финальный статус')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Статус задач',
                'verbose_name_plural': 'Статусы задач',
                'db_table': 'task_statuses',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AlterField(
            model_name='kanbancolumn',
            name='column_type',
            field=models.CharField(choices=[('backlog', 'Бэклог'), ('todo', 'К выполнению'), ('in_progress', 'В работе'), ('review', 'На проверке'), ('done', 'Выполнено'), ('cancelled', 'Отменено')], default='todo', max_length=20, verbose_name='Тип колонки'),
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Название задачи')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('task_type', models.CharField(choices=[('purchase', 'Закупка'), ('work', 'Работа'), ('delivery', 'Поставка'), ('installation', 'Монтаж'), ('control', 'Контроль'), ('documentation', 'Документация'), ('other', 'Прочее')], default='other', max_length=20, verbose_name='Тип задачи')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок выполнения')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Начато')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Завершено')),
                ('progress_percent', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Прогресс (%)')),
                ('estimated_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6, verbose_name='Планируемые часы')),
                ('actual_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6, verbose_name='Фактические часы')),
                ('budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Бюджет')),
                ('actual_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Фактическая стоимость')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Позиция в колонке')),
                ('tags', models.CharField(blank=True, help_text='Через запятую', max_length=500, verbose_name='Теги')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='Срочная')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирована')),
                ('block_reason', models.TextField(blank=True, verbose_name='Причина блокировки')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='task_attachments/', verbose_name='Вложение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Назначен')),
                ('column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='kanban.kanbancolumn', verbose_name='Колонка')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project', verbose_name='Проект')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Проверил')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='kanban.taskcategory', verbose_name='Категория')),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='kanban.taskpriority', verbose_name='Приоритет')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='kanban.taskstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Задача проекта',
                'verbose_name_plural': 'Задачи проектов',
                'db_table': 'project_tasks',
                'ordering': ['column__position', 'position', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/', verbose_name='Файл')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Размер файла')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружен')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='kanban.projecttask', verbose_name='Задача')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_task_attachments', to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Вложение к задаче',
                'verbose_name_plural': 'Вложения к задачам',
                'db_table': 'task_attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Комментарий')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Внутренний комментарий')),
                ('is_system', models.BooleanField(default=False, verbose_name='Системный комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлен')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='kanban.projecttask', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Комментарий к задаче',
                'verbose_name_plural': 'Комментарии к задачам',
                'db_table': 'task_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Действие')),
                ('old_value', models.TextField(blank=True, verbose_name='Старое значение')),
                ('new_value', models.TextField(blank=True, verbose_name='Новое значение')),
                ('field_name', models.CharField(blank=True, max_length=50, verbose_name='Поле')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='kanban.projecttask', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_history', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'История изменений задачи',
                'verbose_name_plural': 'История изменений задач',
                'db_table': 'task_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency_type', models.CharField(choices=[('blocks', 'Блокирует'), ('depends_on', 'Зависит от'), ('related', 'Связана с')], default='depends_on', max_length=20, verbose_name='Тип зависимости')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('depends_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='kanban.projecttask', verbose_name='Зависит от')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='kanban.projecttask', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Зависимость задач',
                'verbose_name_plural': 'Зависимости задач',
                'db_table': 'task_dependencies',
                'unique_together': {('task', 'depends_on')},
            },
        ),
    ]
