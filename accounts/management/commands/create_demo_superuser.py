from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import IntegrityError

User = get_user_model()


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ-—Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã "–ü—Ä–æ–µ–∫—Ç–Ω—ã–π –û—Ñ–∏—Å"'

    def add_arguments(self, parser):
        parser.add_argument(
            '--email',
            type=str,
            default='admin@project-office.ru',
            help='Email –¥–ª—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin@project-office.ru)'
        )
        parser.add_argument(
            '--password',
            type=str,
            default='admin123',
            help='–ü–∞—Ä–æ–ª—å –¥–ª—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin123)'
        )
        parser.add_argument(
            '--first_name',
            type=str,
            default='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            help='–ò–º—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        )
        parser.add_argument(
            '--last_name',
            type=str,
            default='–°–∏—Å—Ç–µ–º—ã',
            help='–§–∞–º–∏–ª–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        )

    def handle(self, *args, **options):
        email = options['email']
        password = options['password']
        first_name = options['first_name']
        last_name = options['last_name']

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email
            if User.objects.filter(email=email).exists():
                self.stdout.write(
                    self.style.WARNING(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                )
                return

            # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User.objects.create_superuser(
                email=email,
                password=password,
                first_name=first_name,
                last_name=last_name,
                role=User.Role.SUPERUSER
            )

            self.stdout.write(
                self.style.SUCCESS(f'‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
            )
            self.stdout.write(f'üìß Email: {email}')
            self.stdout.write(f'üîë –ü–∞—Ä–æ–ª—å: {password}')
            self.stdout.write(f'üë§ –ò–º—è: {first_name} {last_name}')
            self.stdout.write(f'üé≠ –†–æ–ª—å: {user.get_role_display()}')
            self.stdout.write('')
            self.stdout.write('üöÄ –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É:')
            self.stdout.write('   - –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: http://127.0.0.1:8000/')
            self.stdout.write('   - –ü—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/management/')
            self.stdout.write('   - Django –∞–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/')

        except IntegrityError as e:
            self.stdout.write(
                self.style.ERROR(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}')
            )
