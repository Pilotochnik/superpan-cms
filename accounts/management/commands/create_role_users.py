from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction

User = get_user_model()

class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—è–º–∏...'))

        users_data = [
            # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
            {
                'email': 'admin@superpan.ru',
                'password': 'admin123',
                'first_name': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'last_name': '–°–∏—Å—Ç–µ–º—ã',
                'role': User.Role.ADMIN,
                'is_staff': True,
                'is_superuser': True,
            },
            # –ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä
            {
                'email': 'chief@superpan.ru',
                'password': 'chief123',
                'first_name': '–ò–≤–∞–Ω',
                'last_name': '–ü–µ—Ç—Ä–æ–≤',
                'role': User.Role.CHIEF_ENGINEER,
                'is_staff': True,
            },
            # –ü—Ä–æ—Ä–∞–±
            {
                'email': 'foreman@superpan.ru',
                'password': 'foreman123',
                'first_name': '–°–µ—Ä–≥–µ–π',
                'last_name': '–°–∏–¥–æ—Ä–æ–≤',
                'role': User.Role.FOREMAN,
            },
            # –ö–ª–∞–¥–æ–≤—â–∏–∫
            {
                'email': 'keeper@superpan.ru',
                'password': 'keeper123',
                'first_name': '–ú–∞—Ä–∏—è',
                'last_name': '–ö–æ–∑–ª–æ–≤–∞',
                'role': User.Role.WAREHOUSE_KEEPER,
            },
            # –°–Ω–∞–±–∂–µ–Ω–µ—Ü
            {
                'email': 'supplier@superpan.ru',
                'password': 'supplier123',
                'first_name': '–ê–ª–µ–∫—Å–µ–π',
                'last_name': '–ù–æ–≤–∏–∫–æ–≤',
                'role': User.Role.SUPPLIER,
            },
            # –≠–∫–æ–Ω–æ–º–∏—Å—Ç
            {
                'email': 'economist@superpan.ru',
                'password': 'economist123',
                'first_name': '–ï–ª–µ–Ω–∞',
                'last_name': '–°–º–∏—Ä–Ω–æ–≤–∞',
                'role': User.Role.ECONOMIST,
            },
            # –ü–æ–¥—Ä—è–¥—á–∏–∫
            {
                'email': 'contractor@superpan.ru',
                'password': 'contractor123',
                'first_name': '–î–º–∏—Ç—Ä–∏–π',
                'last_name': '–í–æ–ª–∫–æ–≤',
                'role': User.Role.CONTRACTOR,
            },
        ]

        created_count = 0
        updated_count = 0

        with transaction.atomic():
            for user_data in users_data:
                email = user_data['email']
                password = user_data.pop('password')
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º username —Ä–∞–≤–Ω—ã–º email
                user_data['username'] = email
                
                user, created = User.objects.get_or_create(
                    email=email,
                    defaults=user_data
                )
                
                if created:
                    user.set_password(password)
                    user.save()
                    created_count += 1
                    self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {email} ({user.get_role_display()})')
                else:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    for key, value in user_data.items():
                        setattr(user, key, value)
                    user.set_password(password)
                    user.save()
                    updated_count += 1
                    self.stdout.write(f'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {email} ({user.get_role_display()})')

        self.stdout.write(self.style.SUCCESS(f'–ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ: {created_count}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}'))
        self.stdout.write('\nüìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:')
        self.stdout.write('üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@superpan.ru / admin123')
        self.stdout.write('üë∑ –ì–ª–∞–≤–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä: chief@superpan.ru / chief123')
        self.stdout.write('üî® –ü—Ä–æ—Ä–∞–±: foreman@superpan.ru / foreman123')
        self.stdout.write('üì¶ –ö–ª–∞–¥–æ–≤—â–∏–∫: keeper@superpan.ru / keeper123')
        self.stdout.write('üöö –°–Ω–∞–±–∂–µ–Ω–µ—Ü: supplier@superpan.ru / supplier123')
        self.stdout.write('üë∑ –ü–æ–¥—Ä—è–¥—á–∏–∫: contractor@superpan.ru / contractor123')
