name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.8"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        django-version: ["4.2", "5.0"]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Black code formatting check
      run: black --check .

    - name: Run isort import sorting check
      run: isort --check-only .

    - name: Run flake8 linting
      run: flake8 .

    - name: Run bandit security check
      run: bandit -r . -f json -o bandit-report.json || true

    - name: Set up test database
      run: |
        python manage.py migrate --run-syncdb
        python manage.py collectstatic --noinput

    - name: Run tests with pytest
      run: pytest --cov=. --cov-report=xml --cov-report=html
      env:
        SECRET_KEY: test-secret-key
        DEBUG: True
        DATABASE_URL: sqlite:///test.db

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety

    - name: Run safety check
      run: safety check

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      run: python manage.py migrate
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: False
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Collect static files
      run: python manage.py collectstatic --noinput

    - name: Deploy to Railway
      if: success()
      run: |
        echo "ðŸš€ Deployment would happen here"
        echo "Configure Railway deployment in your project settings"
